import { PlanData } from '@/types/plan';

export function generatePrompt(data: PlanData): string {
  const {
    edad,
    peso,
    altura,
    sexo,
    objetivo,
    restricciones,
    actividadFisica,
    intensidadTrabajo,
    numeroComidas
  } = data;

  const restrStr = restricciones.length > 0
    ? restricciones.join(', ')
    : 'Ninguna';

  return `
Eres un nutricionista profesional. Crea un plan de alimentaci√≥n semanal completo para un paciente con las siguientes caracter√≠sticas:

üîπ Datos del paciente:
- Edad: ${edad} a√±os
- Peso: ${peso} kg
- Altura: ${altura} cm
- Sexo: ${sexo}
- Objetivo: ${objetivo}
- Actividad f√≠sica: ${actividadFisica}
- Intensidad del trabajo: ${intensidadTrabajo}
- N√∫mero de comidas al d√≠a: ${numeroComidas}
- Restricciones alimentarias: ${restrStr}

üßæ El plan debe incluir:
1. 7 d√≠as completos con ${numeroComidas} comidas cada d√≠a
2. Cada comida debe tener:
   - Nombre
   - Descripci√≥n con ingredientes y cantidades exactas
   - Valor nutricional (calor√≠as, prote√≠nas, carbohidratos, grasas)
3. Lista de la compra organizada por categor√≠as
4. Resumen de macronutrientes diarios

üì¶ Devuelve el plan en formato JSON entre los delimitadores ###JSON_START### y ###JSON_END### con esta estructura:

{
  "dias": {
    "Lunes": {
      "desayuno": {
        "nombre": "Desayuno",
        "descripcion": "100g avena, 200ml leche, 1 pl√°tano",
        "calorias": 450,
        "proteinas": 20,
        "carbohidratos": 50,
        "grasas": 15
      },
      "almuerzo": { ... },
      "cena": { ... }
    },
    "Martes": { ... },
    // ... resto de d√≠as
  },
  "listaCompra": {
    "Frutas": ["Pl√°tanos", "Manzanas", ...],
    "Verduras": ["Espinacas", "Tomates", ...],
    // ... resto de categor√≠as
  },
  "macronutrientes": {
    "calorias": 2500,
    "proteinas": 150,
    "carbohidratos": 300,
    "grasas": 80
  }
}

‚ùå No incluyas explicaciones, encabezados, texto adicional ni comentarios.
`;
}
  